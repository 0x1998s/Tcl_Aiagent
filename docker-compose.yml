version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: tcl-postgres
    environment:
      POSTGRES_DB: tcl_agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tcl-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: tcl-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tcl-network

  # ChromaDB向量数据库
  chromadb:
    image: chromadb/chroma:latest
    container_name: tcl-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - tcl-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tcl-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/tcl_agent
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    depends_on:
      - postgres
      - redis
      - chromadb
    volumes:
      - ./backend:/app
      - ./data:/app/data
    networks:
      - tcl-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tcl-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - tcl-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: tcl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - tcl-network

volumes:
  postgres_data:
  redis_data:
  chromadb_data:

networks:
  tcl-network:
    driver: bridge
